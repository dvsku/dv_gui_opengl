CMAKE_MINIMUM_REQUIRED (VERSION 3.8)

FILE(GLOB_RECURSE DV_GUI_SOURCES_GLFW CONFIGURE_DEPENDS 
    "glfw/*.c" "glfw/*.cpp"
)

FILE(GLOB_RECURSE DV_GUI_SOURCES_GLAD CONFIGURE_DEPENDS 
    "glad/*.c" "glad/*.cpp"
)

FILE(GLOB_RECURSE DV_GUI_SOURCES_IMGUI CONFIGURE_DEPENDS 
    "imgui/*.c" "imgui/*.cpp"
)

FILE(GLOB_RECURSE DV_GUI_SOURCES CONFIGURE_DEPENDS 
    "dv_gui_opengl/*.c" "dv_gui_opengl/*.cpp"
)

FILE(GLOB_RECURSE DV_GUI_HEADERS CONFIGURE_DEPENDS 
    "${DV_GUI_INCLUDES}/*.h" "${DV_GUI_INCLUDES}/*.hpp"
)

ADD_LIBRARY(dv_gui_opengl STATIC
    ${DV_GUI_SOURCES_GLFW}
	${DV_GUI_SOURCES_GLAD}
	${DV_GUI_SOURCES_IMGUI}
	${DV_GUI_SOURCES}
	${DV_GUI_HEADERS}
)

TARGET_INCLUDE_DIRECTORIES(dv_gui_opengl PRIVATE "${DV_GUI_INCLUDES}")
TARGET_INCLUDE_DIRECTORIES(dv_gui_opengl PRIVATE "${DV_GUI_INCLUDES}/imgui")
TARGET_INCLUDE_DIRECTORIES(dv_gui_opengl PRIVATE "${DV_GUI_INCLUDES}/imgui/backends")
TARGET_INCLUDE_DIRECTORIES(dv_gui_opengl PRIVATE "${DV_GUI_INCLUDES}/imgui/misc/cpp")
TARGET_INCLUDE_DIRECTORIES(dv_gui_opengl PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/libraries")

IF (MSVC)
	TARGET_COMPILE_OPTIONS(dv_gui_opengl PRIVATE
		$<$<CONFIG:Debug>:
			$<$<CXX_COMPILER_ID:MSVC>: /std:c++20>
		>
		$<$<CONFIG:Release>:
			$<$<CXX_COMPILER_ID:MSVC>: /std:c++20 /DNDEBUG>
		>
	)

    TARGET_COMPILE_DEFINITIONS(dv_gui_opengl PUBLIC  -D_GLFW_WIN32)
    TARGET_COMPILE_DEFINITIONS(dv_gui_opengl PRIVATE -D_CRT_SECURE_NO_WARNINGS)
	TARGET_COMPILE_DEFINITIONS(dv_gui_opengl PUBLIC  -DIMGUI_IMPL_OPENGL_LOADER_CUSTOM)
	TARGET_COMPILE_DEFINITIONS(dv_gui_opengl PUBLIC  -DGLAD_GLAPI_EXPORT)
	TARGET_COMPILE_DEFINITIONS(dv_gui_opengl PUBLIC  -DGLAD_GLAPI_EXPORT_BUILD)
ENDIF()
